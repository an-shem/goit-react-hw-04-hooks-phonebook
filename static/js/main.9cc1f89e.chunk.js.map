{"version":3,"sources":["apiStorage.js","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/phonebookApp/App.styled.jsx","components/phonebookApp/App.jsx","index.js"],"names":["apiStorage","key","value","localStorage","setItem","JSON","stringify","data","getItem","parse","MyCard","styled","div","Card","children","Form","form","Label","label","Input","input","LabelName","span","AddButton","button","ContactForm","onSubmit","reset","e","target","name","number","preventDefault","type","pattern","title","required","Contact","li","Text","DeleteButton","ContactItem","onDeleteContact","contact","id","onClick","ListContact","ul","ContactList","contacts","map","FilterTitle","h3","FilterInput","filter","Filter","handleChange","onChange","Container","Section","Title","h1","App","useState","setContacts","setFilter","useEffect","nameVerification","find","filteredContacts","toLowerCase","includes","toast","error","style","border","padding","color","iconTheme","primary","secondary","newContact","uuidv4","prev","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc1f89e.chunk.js","sourcesContent":["const setDataStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\nconst getDataStorage = key => {\r\n  const data = localStorage.getItem(`${key}`);\r\n  const parsedData = JSON.parse(data);\r\n  return parsedData;\r\n};\r\n\r\nexport const apiStorage = { setDataStorage, getDataStorage };\r\n","import styled from '@emotion/styled';\r\n\r\nexport const MyCard = styled.div`\r\n  margin: 0 auto;\r\n  width: 500px;\r\n  padding: 20px 50px;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 6px rgba(0, 0, 0, 0.16);\r\n`;\r\n","import { MyCard } from './Card.styled';\r\n\r\nexport default function Card({ children }) {\r\n  return <MyCard>{children}</MyCard>;\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 1.167;\r\n  letter-spacing: 0.01em;\r\n  color: #757575;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding-left: 20px;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  height: 40px;\r\n\r\n  border: 2px solid rgba(33, 33, 33, 0.2);\r\n  border-radius: 4px;\r\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #2196f3;\r\n  }\r\n`;\r\n\r\nexport const LabelName = styled.span`\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  width: 160px;\r\n  height: 40px;\r\n  margin: 0 auto;\r\n  font-size: 18px;\r\n  line-height: 1.167;\r\n  letter-spacing: 0.01em;\r\n  color: #757575;\r\n  background: #e5e3e9;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #188ce8;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    color: #fff;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Form, Label, Input, LabelName, AddButton } from './ContactForm.styled';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const number = e.target.number.value;\r\n\r\n    onSubmit(name, number);\r\n    reset(e);\r\n  };\r\n\r\n  const reset = e => {\r\n    e.target.name.value = '';\r\n    e.target.number.value = '';\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        <LabelName>Name</LabelName>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        <LabelName>Number</LabelName>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <AddButton type=\"submit\">Add contact</AddButton>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 1.167;\r\n  letter-spacing: 0.01em;\r\n  color: #272727;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  padding: 8px 10px;\r\n  background: #e5e3e9;\r\n  border: none;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.03em;\r\n\r\n  &:hover {\r\n    background: #e96161;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    color: #fff;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Contact, Text, DeleteButton } from './ContactItem.styled';\r\n\r\nexport default function ContactItem({\r\n  onDeleteContact,\r\n  contact: { name, number, id },\r\n}) {\r\n  return (\r\n    <Contact>\r\n      <Text>\r\n        - {name}: {number}\r\n      </Text>\r\n      <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        X\r\n      </DeleteButton>\r\n    </Contact>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListContact = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 20px;\r\n  padding-bottom: 20px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\n\r\nimport { ListContact } from './ContactList.styled';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ListContact>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ListContact>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FilterTitle = styled.h3`\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.03em;\r\n  color: #757575;\r\n`;\r\n\r\nexport const FilterInput = styled.input`\r\n  margin-bottom: 24px;\r\n  padding: 4px 0px 4px 10px;\r\n  width: 80%;\r\n  border-radius: 4px;\r\n  border: 2px solid ${({ filter }) => (filter ? '#2196f3;' : '#89888ba6')};\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border: 2px solid #2196f3;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { FilterTitle, FilterInput } from './Filter.styled';\r\n\r\nexport default function Filter({ filter, handleChange }) {\r\n  return (\r\n    <div>\r\n      <FilterTitle>Find contacts by name</FilterTitle>\r\n      <FilterInput\r\n        filter={filter}\r\n        type=\"text\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  letter-spacing: 0.03em;\r\n  padding-bottom: 6px;\r\n  border-bottom: 1px solid #757575;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { apiStorage } from '../../apiStorage.js';\r\n\r\nimport Card from '../Card';\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\n\r\nimport { Container, Section, Title } from './App.styled';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    () => apiStorage.getDataStorage('contacts') ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    apiStorage.setDataStorage('contacts', contacts);\r\n  }, [contacts]);\r\n\r\n  const handleFilterChange = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (name, number) => {\r\n    if (nameVerification(name)) {\r\n      toast.error(`${name} is already in contacts`, {\r\n        style: {\r\n          border: '1px solid #713200',\r\n          padding: '16px',\r\n          color: '#713200',\r\n        },\r\n        iconTheme: {\r\n          primary: '#713200',\r\n          secondary: '#FFFAEE',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    setContacts(prev => [...prev, newContact]);\r\n  };\r\n\r\n  const nameVerification = name => {\r\n    return contacts.find(contact => name === contact.name);\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        <Section>\r\n          <Title>Phonebook</Title>\r\n          <ContactForm onSubmit={handleSubmit} />\r\n        </Section>\r\n        <Section>\r\n          <Title>Contacts</Title>\r\n          <Filter filter={filter} handleChange={handleFilterChange} />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDeleteContact={deleteContact}\r\n          />\r\n        </Section>\r\n        <Toaster />\r\n      </Container>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/phonebookApp';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}